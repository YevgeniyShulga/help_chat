{"version":3,"sources":["constants/sitesconfig.js","actions/site.js","constants/SiteActionTypes.js","components/List/PortalsList.js","components/Top/DenseAppBar.js","components/Bottom/BottomLinks.js","containers/ListSitesScreen/MainScreen.js","components/Site/PrimaryTabs.js","utils/format.js","utils/WebViewHandler.js","components/WebView/WebView.js","containers/Application/Sites/UserTabs/Accounts.js","containers/Application/Sites/SiteTabs/Sites.js","components/Filters/Range.js","components/Filters/Selects.js","containers/Application/Main.js","reducers/sites.js","reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["sites","name","id","url","onlineSender","filters","method","timeInterval","content","css","files","js","code","matches","run_at","setActiveSite","site","dispatch","type","payload","isChoosen","val","addUser","user","siteId","setActiveUser","PortalsList","addSite","console","log","newUser","props","addActiveSite","setChoosen","classes","this","buttonsList","map","elem","push","Button","variant","color","className","button","onClick","handler","root","Component","withStyles","theme","display","flexWrap","alignContent","height","justifyContent","margin","spacing","width","input","connect","store","e","DenseAppBar","state","open","anchorEl","document","getElementsByTagName","length","handleClick","event","setState","currentTarget","CssBaseline","AppBar","clsx","appBar","appBarShift","Toolbar","IconButton","aria-label","edge","menuButton","hide","src","alt","logo","Typography","noWrap","addButtons","style","Fab","marginLeft","currentSite","keepMounted","Boolean","onClose","handleSite","siteHandler","Drawer","drawer","anchor","paper","drawerPaper","drawerHeader","Divider","List","text","index","ListItem","key","ListItemIcon","ListItemText","primary","marginBottom","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","marginRight","flexShrink","alignItems","padding","mixins","toolbar","flexGrow","contentShift","makeStyles","siteList","MainScreen","TabPanel","children","value","other","component","role","hidden","aria-labelledby","Box","p","useStyles","backgroundColor","palette","background","ScrollableTabsButtonAuto","React","useState","setValue","tabPanels","tabs","typePanel","ident","labels","Tab","label","position","Tabs","onChange","newValue","indicatorColor","textColor","scrollButtons","camelify","str","replace","x","toUpperCase","WebViewHandler","webviews","$","get","forEach","current","addEventListener","removeAllTargetBlank","executeScript","file","frameNumber","charAt","PATTERN_ACCOUNT","config","EVENTS","WebView","loaded","webview","node","refs","_bindEvents","_assignMethods","addContentToWebViews","partition","ref","ev","listenerName","format","Object","getOwnPropertyNames","filter","prop","Accounts","users","prevProps","prevState","snapshot","views","accountsTotal","nodeintegrationinsubframes","Sites","addedSites","activeTotal","ownProps","container","textField","menu","Main","withFilters","addSiteTo","Grid","item","xl","xs","md","initialState","availableFilters","chosen","activeUser","rootReducer","combineReducers","action","includes","updatedUsers","filteredUsers","reduce","acum","curVal","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootStore","createStore","applyMiddleware","thunk","App","showApp","main","mainScreen","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.55c1ccbd.chunk.js","sourcesContent":["const sites = [\r\n    {\r\n        name: 'SVADBA',\r\n        id: 0,\r\n        url: \"http://www.google.com/\",\r\n        onlineSender:\r\n            {\r\n                filters: [],\r\n                method: '',\r\n                timeInterval: 0,\r\n            }\r\n    },\r\n\r\n    {\r\n        name: 'Jump 4 Love',\r\n        id: 1,\r\n        url: \"https://j4l.com/\",\r\n        onlineSender:\r\n            {\r\n                filters: [],\r\n                method: '',\r\n                timeInterval: 0,\r\n                content:{\r\n                    name: \"Parser\",\r\n                    css: {files: [ \"/all/jump4love-chat/css.css\" ]},\r\n                    js: {files: [\r\n                            \"/all/jquery.js\",\r\n                            \"/all/names.js\",\r\n                            \"/all/jump4love-chat/include-4-clicker.js\",\r\n                            \"/all/notification.js\"\r\n                        ],\r\n                        code: 'console.log(\"injected\")'},\r\n                    matches: /*[ \"*://j4l.com/chatv4*\",  \"*://!*.j4l.com/chatv4*\", \"http://ukrainiangirls.pw/!*\" ]*/[\"<all_urls>\"],\r\n                    run_at: \"document_end\"\r\n                }\r\n            }\r\n    },\r\n\r\n    {\r\n        name: 'Romance',\r\n        id: 2,\r\n        url: \"https://romancecompass.com/\",\r\n        onlineSender:\r\n            {\r\n                filters: [],\r\n                method: '',\r\n                timeInterval: 0,\r\n            }\r\n    }\r\n];\r\n\r\nexport default sites","import * as type from './../constants/SiteActionTypes'\r\n\r\nexport const addActiveSite = (site) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: type.TYPE_ADD_ACTIVE_SITE,\r\n            payload: site\r\n        })\r\n    }\r\n}\r\n\r\nexport const setActiveSite = (site) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: type.TYPE_SET_ACTIVE_SITE,\r\n            payload: site\r\n        })\r\n    }\r\n}\r\n\r\nexport const isChoosen = (val) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: type.TYPE_SET_CHOSEN_TYPE,\r\n            payload: val\r\n        })\r\n    }\r\n}\r\n\r\nexport const addUser = (site, user) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: type.TYPE_ADD_USER,\r\n            payload: {siteId: site.id, user: user}\r\n        })\r\n    }\r\n}\r\n\r\nexport const setActiveUser = (user) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: type.TYPE_SET_ACTIVE_USER,\r\n            payload: user\r\n        })\r\n    }\r\n}","export const TYPE_ADD_ACTIVE_SITE = 'TYPE_ADD_ACTIVE_SITE';\r\nexport const TYPE_SET_ACTIVE_SITE = 'TYPE_SET_ACTIVE_SITE';\r\nexport const TYPE_SET_CHOSEN_TYPE = 'TYPE_SET_CHOSEN_TYPE';\r\n\r\n\r\nexport const TYPE_ADD_USER = 'TYPE_ADD_USER';\r\nexport const TYPE_SET_ACTIVE_USER = 'TYPE_SET_ACTIVE_USER';","import React, {Component} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport sites from './../../constants/sitesconfig'\r\nimport {addActiveSite, addUser, isChoosen, setActiveSite, setActiveUser} from \"../../actions/site\";\r\nimport {connect} from \"react-redux\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignContent: 'flex-start',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        width: '25%'\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n});\r\n\r\nclass PortalsList extends Component\r\n{\r\n\r\n    addSite = (site) => {\r\n        console.log(site);\r\n        let newUser = {id: 1, name: \"girl1\"};\r\n        this.props.setActiveSite(site);\r\n        this.props.addActiveSite(site);\r\n        this.props.setChoosen(true);\r\n        this.props.addUser(site, newUser);\r\n        this.props.setActiveUser(newUser);\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n\r\n        const handler = (elem) => {this.addSite(elem);}\r\n\r\n        let buttonsList = [];\r\n\r\n        sites.map(function (elem) {\r\n            buttonsList.push(\r\n                <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={() => handler(elem)}>\r\n                    {elem.name}\r\n                </Button>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                {buttonsList}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveSite: (e) => dispatch(setActiveSite(e)),\r\n        addActiveSite: (e) => dispatch(addActiveSite(e)),\r\n        setChoosen: (e) => dispatch(isChoosen(e)),\r\n        addUser: (site, newUser) => dispatch(addUser(site, newUser)),\r\n        setActiveUser: (user) => dispatch(setActiveUser(user)),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {};\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(PortalsList));","// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n//\r\n// const useStyles = makeStyles(theme => ({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//     },\r\n//     menuButton: {\r\n//         marginRight: theme.spacing(2),\r\n//     },\r\n// }));\r\n//\r\n// export default function DenseAppBar() {\r\n//     const classes = useStyles();\r\n//\r\n//     return (\r\n//         <div className={classes.root}>\r\n//             <AppBar position=\"static\">\r\n//                 <Toolbar variant=\"dense\">\r\n//                     <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n//                         <MenuIcon />\r\n//                     </IconButton>\r\n//                     <Typography variant=\"h6\" color=\"inherit\">\r\n//                         Help-Chat\r\n//                     </Typography>\r\n//                 </Toolbar>\r\n//             </AppBar>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nimport React, {Component} from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles, useTheme, withStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport {Icon} from \"@material-ui/core\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport PortalsList from \"../List/PortalsList\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginBottom: '50px'\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    logo: {\r\n        width: '50px',\r\n    }\r\n});\r\n\r\nclass DenseAppBar extends  Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: null,\r\n            anchorEl: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(document.getElementsByTagName('webview'))\r\n        let elems = document.getElementsByTagName('webview');\r\n        let f = () => {\r\n            setInterval(() => document.cookie, 1000);\r\n        }\r\n        // if (elems.length > 0) {\r\n        //     elems[0].addEventListener('contentload', function() {\r\n        //         elems[0].executeScript({ code: f.toString() }, function (res) {\r\n        //             console.log(res);\r\n        //         })\r\n        //     });\r\n        // }\r\n        if (elems.length > 0) {\r\n            \r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        const {open, anchorEl} = this.state;\r\n\r\n        const handleDrawerOpen = () => {\r\n            this.setState({open: true});\r\n        };\r\n\r\n        const handleDrawerClose = () => {\r\n            this.setState({open: false});\r\n        };\r\n\r\n\r\n\r\n        const handleClick = event => {\r\n            this.setState({anchorEl: event.currentTarget});\r\n        };\r\n\r\n        const handleClose = () => {\r\n            this.setState({anchorEl: null});\r\n        };\r\n\r\n        const AddButtons = () => {\r\n            return ( <div style={{display : 'inherit'}}>\r\n                <Fab style={{marginLeft: '20px', width:\"36px\", height:\"30px\"}} color=\"secondary\" aria-label=\"Add Site\" onClick={handleClick}>\r\n                    <AddIcon />\r\n                </Fab>\r\n                <Typography variant=\"h6\" noWrap>\r\n                    Open one more site\r\n                </Typography>\r\n\r\n\r\n                <Fab style={{marginLeft: '20px', width:\"36px\", height:\"30px\"}} color=\"primary\" aria-label=\"Add Site\" onClick={() => this.props.addUser(this.props.currentSite, this.props.newUser)}>\r\n                    <AddIcon />\r\n                </Fab>\r\n                <Typography variant=\"h6\" noWrap>\r\n                    Add user\r\n                </Typography>\r\n            </div>\r\n                    )\r\n            }\r\n\r\n\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar\r\n\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <MenuIcon />\r\n\r\n                        </IconButton>\r\n\r\n\r\n                        <img src={'/my-app/build/logo.png'} alt={'help-chat image'} className={classes.logo}/>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            HELP-CHAT\r\n                        </Typography>\r\n\r\n                        {this.props.addButtons && AddButtons()}\r\n\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <PortalsList handleSite={this.props.siteHandler}/>\r\n                        </Menu>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Divider />\r\n                    <List>\r\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(DenseAppBar)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 500,\r\n    },\r\n});\r\n\r\nexport default function BottomLinks() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('recents');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n            <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\r\n            <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\r\n            <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\r\n            <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\r\n        </BottomNavigation>\r\n    );\r\n}","import DenseAppBar from \"./../../components/Top/DenseAppBar\";\r\nimport 'typeface-roboto';\r\nimport React, { Component } from 'react';\r\nimport {connect, Provider} from 'react-redux'\r\nimport {setActiveSite, addActiveSite, isChoosen, setActiveUser, addUser} from \"../../actions/site\";\r\n//import { rootStore } from './store/index';\r\n\r\nimport PortalsList from \"./../../components/List/PortalsList\";\r\nimport BottomLinks from \"./../../components/Bottom/BottomLinks\";\r\nimport siteList from \"./../../constants/sitesconfig\"\r\n\r\nconsole.log(siteList);\r\n// Need jQuery? Install it with \"yarn add jquery\", then uncomment to require it.\r\n// const $ = require('jquery');\r\n\r\n\r\nclass MainScreen extends Component {\r\n\r\n    render() {\r\n\r\n        const newUser = {}\r\n\r\n        return (\r\n\r\n            <div>\r\n                <DenseAppBar addButtons={false}/>\r\n                <PortalsList />\r\n                {/*<BottomLinks/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\n\r\n\r\nexport default MainScreen;\r\n","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    console.log(value, index)\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            <Box p={3}>{children}</Box>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState();\r\n    console.log(props);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        console.log(newValue)\r\n        setValue(newValue);\r\n    };\r\n\r\n    let tabPanels = props.tabs.map((elem) => {\r\n        return (\r\n            <TabPanel value={value} index={props.typePanel + elem.props.id + props.ident} key={props.typePanel + elem.props.id + props.ident}>\r\n                {elem}\r\n            </TabPanel>\r\n        );\r\n\r\n    });\r\n    let labels = props.tabs.map(function (elem) {\r\n        console.log(elem)\r\n        return (\r\n            <Tab value={props.typePanel + elem.props.id + props.ident} label={elem.props.name} {...a11yProps(props.typePanel + elem.props.id + props.ident)} key={props.typePanel + elem.props.name  + props.ident} />\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                    aria-label=\"scrollable auto tabs example\"\r\n                >\r\n                    {labels}\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            {tabPanels}\r\n        </div>\r\n    );\r\n}","\r\n\r\nexport function slugify (str) {\r\n    return str.toLowerCase()\r\n        .replace(/[^a-zA-Z_ ]/g, '')\r\n        .replace(/ +/g, '_')\r\n}\r\n\r\nexport function camelify (str) {\r\n    return str.replace(/[_-][a-z]/g, (x) => x[1].toUpperCase())\r\n}\r\n\r\nexport function camelifyObject (obj) {\r\n    if (obj && typeof obj === 'object') {\r\n        if (Array.isArray(obj)) {\r\n            const res = Array(obj.length)\r\n            for (let i = 0; i < obj.length; i++) {\r\n                res[i] = camelifyObject(obj[i])\r\n            }\r\n            return res\r\n        } else {\r\n            const res = {}\r\n            for (const key of Object.keys(obj)) {\r\n                res[camelify(key)] = camelifyObject(obj[key])\r\n            }\r\n            return res\r\n        }\r\n    } else {\r\n        return obj\r\n    }\r\n}\r\n\r\nexport function seconds (secs) {\r\n    if (secs < 60) {\r\n        return ['duration.minute']\r\n    } else if (secs < 3600) {\r\n        return ['duration.minutes', {x: Math.ceil(secs / 60).toFixed()}]\r\n    } else if (secs < 3600 * 2) {\r\n        return ['duration.hour']\r\n    } else {\r\n        return ['duration.hours', {x: Math.ceil(secs / 3600).toFixed()}]\r\n    }\r\n}\r\n\r\n\r\nexport const DATE_FORMAT = 'DD MMMM, YYYY @ hh:mm ZZ'\r\nexport const FS_DATE_FORMAT = 'YYYY.MM.DD-hh.mm.ss'\r\n\r\nexport function price (currency, value) {\r\n    if (currency === 'USD') {\r\n        return `$${(value / 100).toFixed(2)}`\r\n    } else if (currency === 'CAD') {\r\n        return `CAD $${(value / 100).toFixed(2)}`\r\n    } else if (currency === 'AUD') {\r\n        return `AUD $${(value / 100).toFixed(2)}`\r\n    } else if (currency === 'GBP') {\r\n        return `£${(value / 100).toFixed(2)}`\r\n    } else if (currency === 'JPY') {\r\n        return `¥${value.toFixed(2)}`\r\n    } else if (currency === 'EUR') {\r\n        return `${(value / 100).toFixed(2)} €`\r\n    } else {\r\n        return '???'\r\n    }\r\n}","import $ from 'jquery';\r\nimport config from '../constants/sitesconfig'\r\nconst PATTERN_ACCOUNT = 'account';\r\nconst PATTERN_SITE = 'site';\r\n\r\nclass WebViewHandler\r\n{\r\n\r\n\r\n    addContentToWebViews() {\r\n        let webviews = $('webview').get();\r\n        console.log(webviews);\r\n        webviews.forEach((current) => {\r\n            console.log(current);\r\n            current.addEventListener('loadcommit', (e) => {\r\n\r\n                console.log(e);\r\n                console.log(current);\r\n                WebViewHandler.removeAllTargetBlank(current);\r\n                current.executeScript({file: \"/embeded/dist/bundle.js\"});\r\n                current.executeScript({code: \"console.log(window.location.href)\"});\r\n                let id = current.id;\r\n                let str = PATTERN_ACCOUNT + ' ' + PATTERN_SITE;\r\n                let frameNumber = id.charAt(str.length);\r\n                console.log(config[frameNumber] ,config[frameNumber].onlineSender, config[frameNumber].onlineSender.content, frameNumber)\r\n\r\n            })\r\n        })\r\n    }\r\n\r\n    static removeAllTargetBlank(elem) {\r\n        elem.executeScript({code: 'setTimeout(() => {console.log(\"remove target\");let link = document.getElementsByTagName(\"a\"); [].forEach.call(link, (elem) => {elem.removeAttribute(\"target\")})}, 3000)'});\r\n        elem.executeScript({code: 'setTimeout(() => {console.log(\"remove fixed\");let link = document.getElementsByTagName(\"header\"); [].forEach.call(link, (elem) => {elem.style.position=\"\";})}, 3000)'});\r\n    }\r\n}\r\n\r\nexport default WebViewHandler","// adapted from https://github.com/keokilee/react-electron-webview\r\n\r\nimport React, { Component} from 'react'\r\nimport * as format from '../../utils/format'\r\n\r\nimport WebViewHandler from \"../../utils/WebViewHandler\";\r\n\r\nconst EVENTS = [\r\n    'close',\r\n    'console-message',\r\n    'crashed',\r\n    'destroyed',\r\n    'did-fail-load',\r\n    'did-finish-load',\r\n    'did-frame-finish-load',\r\n    'did-get-redirect-request',\r\n    'did-get-response-details',\r\n    'did-navigate',\r\n    'did-start-loading',\r\n    'did-stop-loading',\r\n    'dom-ready',\r\n    'enter-html-full-screen',\r\n    'gpu-crashed',\r\n    'ipc-message',\r\n    'leave-html-full-screen',\r\n    'load-commit',\r\n    'new-window',\r\n    'page-favicon-updated',\r\n    'page-title-set',\r\n    'page-title-updated',\r\n    'plugin-crashed'\r\n]\r\n\r\nexport class WebView extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state = {loaded: false, webview: null}\r\n    }\r\n\r\n    componentDidMount () {\r\n        const node = this.refs.webview;\r\n\r\n        console.log(document.getElementsByTagName('webview')[0]);\r\n\r\n        \r\n        this._bindEvents(node);\r\n        this._assignMethods(node);\r\n\r\n\r\n        if (!this.state.loaded) {\r\n            let handler = new WebViewHandler();\r\n            handler.addContentToWebViews();\r\n            this.setState({loaded: true, webview: node})\r\n        }\r\n\r\n    }\r\n\r\n    render () {\r\n        console.log('our partition prop: ', this.props.partition)\r\n        return (<webview {...this.props} ref='webview'></webview>)\r\n    }\r\n\r\n    // Private methods\r\n    _bindEvents (node) {\r\n        EVENTS.map((ev) => {\r\n            const listenerName = format.camelify(ev)\r\n            node.addEventListener(ev, this.props[listenerName])\r\n        })\r\n    }\r\n\r\n    _assignMethods (node) {\r\n        console.log('putting dom-ready')\r\n        node.addEventListener('dom-ready', () => {\r\n            // console.log('got dom-ready, assigning methods')\r\n            Object.getOwnPropertyNames(node)\r\n                .filter((prop) => typeof prop === 'function')\r\n                .map((method, key) => {\r\n                    console.log(method);\r\n                    console.log('assigning method', key);\r\n                    this[method] = node[method]\r\n                })\r\n        })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default WebView","\r\nimport 'typeface-roboto';\r\nimport React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\n//import { rootStore } from './store/index';\r\nimport {setActiveUser} from \"./../../../../actions/site\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport PrimaryTabs from \"../../../../components/Site/PrimaryTabs\";\r\nimport $ from 'jquery';\r\nimport WebView from \"../../../../components/WebView/WebView\";\r\n\r\n// Need jQuery? Install it with \"yarn add jquery\", then uncomment to require it.\r\n// const $ = require('jquery');\r\n\r\n\r\nclass Accounts extends Component {\r\n\r\n    state = {\r\n        users: [[]],\r\n        site: {id: 0, url: '', name: ''}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({users: this.props.users, site: this.props.site})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.users.length !== this.props.users.length) {\r\n            this.setState({users: this.props.users});\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {site, users, accountsTotal} = this.props;\r\n\r\n\r\n        let views = accountsTotal > 0 && users[site.id].map(function (elem) {\r\n            // let webview = $(\"<webview id='\" + elem.id + \"' src='\" + site.url + \"' style='width:100%, height:500px' name='\" + elem.name + \"' partition='\" + site.url + elem.id + \"'></webview>\").get();\r\n            // webview.addContentScripts([\r\n            //     {\r\n            //         css: [ \"/all/jump4love-chat/css.css\" ],\r\n            //         js: [ \"/all/jquery.js\", \"/all/names.js\", \"/all/jump4love-chat/include-3.js\", \"/all/notification.js\" ],\r\n            //         matches: [ \"*://j4l.com/chat_v3*\",  \"*://*.j4l.com/chat_v3*\", \"http://ukrainiangirls.pw/*\" ],\r\n            //         run_at: \"document_end\"\r\n            //     },])\r\n\r\n            let webv = <WebView id={'account' + elem.id + 'site' + site.id} src={site.url} style={{width:'100%', height:'1500px'}} name={'Parser'} partition={'persist:' + site.name + ' ' + 'Girl ' + elem.id} nodeintegrationinsubframes />;\r\n\r\n            return (\r\n                webv\r\n            );\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <PrimaryTabs tabs={views} typePanel={'account'} key={'accounts' + site.id} ident={'accounts' + site.id}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        users: store.sites.users,\r\n        accountsTotal: store.sites.accountsTotal\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveUser: (e) => dispatch(setActiveUser(e)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Accounts)\r\n","\r\nimport 'typeface-roboto';\r\nimport React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {setActiveSite} from \"../../../../actions/site\";\r\n\r\nimport Accounts from \"../UserTabs/Accounts\";\r\nimport PrimaryTabs from \"../../../../components/Site/PrimaryTabs\";\r\n\r\n// Need jQuery? Install it with \"yarn add jquery\", then uncomment to require it.\r\n// const $ = require('jquery');\r\n\r\n\r\nclass Sites extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        let {addedSites} = this.props;\r\n        let sites = this.props.activeTotal > 0 && addedSites.map(function (elem) {\r\n            return (\r\n                <Accounts site={elem} id={elem.id} name={elem.name}/>\r\n            );\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <PrimaryTabs tabs={sites} typePanel={'site'} ident={'site'}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store, ownProps) => {\r\n\r\n    return {\r\n        addedSites: store.sites.addedSites,\r\n        currentSite: store.sites.currentSite,\r\n        activeTotal: store.sites.activeTotal,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveSite: (e) => dispatch(setActiveSite(e)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sites)\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}°C`;\r\n}\r\n\r\nexport default function RangeSlider() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([20, 37]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Temperature range\r\n            </Typography>\r\n            <Slider\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst currencies = [\r\n    {\r\n        value: 'USD',\r\n        label: '$',\r\n    },\r\n    {\r\n        value: 'EUR',\r\n        label: '€',\r\n    },\r\n    {\r\n        value: 'BTC',\r\n        label: '฿',\r\n    },\r\n    {\r\n        value: 'JPY',\r\n        label: '¥',\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nexport default function MultilineTextFields() {\r\n    const classes = useStyles();\r\n    const [currency, setCurrency] = React.useState('EUR');\r\n\r\n    const handleChange = event => {\r\n        setCurrency(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <div>\r\n                <TextField\r\n                    id=\"standard-select-currency\"\r\n                    select\r\n                    label=\"Select\"\r\n                    className={classes.textField}\r\n                    value={currency}\r\n                    onChange={handleChange}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    helperText=\"Please select your currency\"\r\n                    margin=\"normal\"\r\n                >\r\n                    {currencies.map(option => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <TextField\r\n                    id=\"standard-select-currency-native\"\r\n                    select\r\n                    label=\"Native select\"\r\n                    className={classes.textField}\r\n                    value={currency}\r\n                    onChange={handleChange}\r\n                    SelectProps={{\r\n                        native: true,\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    helperText=\"Please select your currency\"\r\n                    margin=\"normal\"\r\n                >\r\n                    {currencies.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n                </TextField>\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    id=\"filled-select-currency\"\r\n                    select\r\n                    label=\"Select\"\r\n                    className={classes.textField}\r\n                    value={currency}\r\n                    onChange={handleChange}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    helperText=\"Please select your currency\"\r\n                    margin=\"normal\"\r\n                    variant=\"filled\"\r\n                >\r\n                    {currencies.map(option => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <TextField\r\n                    id=\"filled-select-currency-native\"\r\n                    select\r\n                    label=\"Native select\"\r\n                    className={classes.textField}\r\n                    value={currency}\r\n                    onChange={handleChange}\r\n                    SelectProps={{\r\n                        native: true,\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    helperText=\"Please select your currency\"\r\n                    margin=\"normal\"\r\n                    variant=\"filled\"\r\n                >\r\n                    {currencies.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n                </TextField>\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    id=\"outlined-select-currency\"\r\n                    select\r\n                    label=\"Select\"\r\n                    className={classes.textField}\r\n                    value={currency}\r\n                    onChange={handleChange}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    helperText=\"Please select your currency\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                >\r\n                    {currencies.map(option => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <TextField\r\n                    id=\"outlined-select-currency-native\"\r\n                    select\r\n                    label=\"Native select\"\r\n                    className={classes.textField}\r\n                    value={currency}\r\n                    onChange={handleChange}\r\n                    SelectProps={{\r\n                        native: true,\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    helperText=\"Please select your currency\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                >\r\n                    {currencies.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n                </TextField>\r\n            </div>\r\n        </form>\r\n    );\r\n}","import DenseAppBar from \"./../../components/Top/DenseAppBar\";\r\nimport 'typeface-roboto';\r\nimport React, { Component } from 'react';\r\nimport {connect, Provider} from 'react-redux'\r\nimport {setActiveSite, addActiveSite, isChoosen, addUser, setActiveUser} from \"../../actions/site\";\r\n//import { rootStore } from './store/index';\r\n\r\nimport PortalsList from \"./../../components/List/PortalsList\";\r\nimport BottomLinks from \"./../../components/Bottom/BottomLinks\";\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Switch from \"@material-ui/core/Switch\"\r\nimport Sites from \"./Sites/SiteTabs/Sites\";\r\nimport RangeSlider from \"../../components/Filters/Range\";\r\nimport Selects from \"../../components/Filters/Selects\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\n// Need jQuery? Install it with \"yarn add jquery\", then uncomment to require it.\r\n// const $ = require('jquery');\r\n\r\n\r\nclass Main extends Component {\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     console.log(prevProps, prevState, this.props)\r\n    //     if (prevProps.sites.length !== this.props.sites.length) {\r\n    //         this.setState({sites: this.props.sites})\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n        const newUser = {id: this.props.users[this.props.currentSite.id].length + 1, name: 'Girl' + this.props.users[this.props.currentSite.id].length + 1};\r\n\r\n\r\n        return (\r\n            <div>\r\n                <DenseAppBar addButtons={true} currentSite={this.props.currentSite} withFilters={true} siteHandler={this.addSiteTo} newUser={newUser} addUser={this.props.addUser}/>\r\n                <Grid container>\r\n\r\n                    <Grid item xl={12} xs={12} md={12}>\r\n                        <Sites />\r\n                    </Grid>\r\n                </Grid>\r\n                {/*<BottomLinks/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        users: store.sites.users,\r\n        sites: store.sites.addedSites,\r\n        currentSite: store.sites.currentSite,\r\n        accountsTotal: store.sites.accountsTotal,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        addUser: (site, user) => dispatch(addUser(site, user))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Main)\r\n","import * as type from \"./../constants/SiteActionTypes\";\r\nexport const initialState = {\r\n    addedSites: [],\r\n    availableFilters: [],\r\n    currentSite: '',\r\n    chosen: false,\r\n    users: [],\r\n    activeUser: null,\r\n    activeTotal: 0,\r\n    accountsTotal: 0,\r\n};\r\n\r\nexport const siteReducer = (state = initialState, action) => {\r\n    console.log(action, state);\r\n    switch (action.type){\r\n\r\n        case type.TYPE_ADD_ACTIVE_SITE :\r\n            const sites = state.addedSites;\r\n            const users = state.users;\r\n            if(!sites.includes(action.payload)){\r\n                sites.push(action.payload);\r\n                users[action.payload.id] = [];\r\n            }\r\n            return {...state, addedSites: sites, users: users, activeTotal: sites.length};\r\n\r\n        case type.TYPE_SET_ACTIVE_SITE :\r\n            return {...state, currentSite: action.payload};\r\n\r\n        case type.TYPE_SET_CHOSEN_TYPE :\r\n            return {...state, chosen: action.payload};\r\n\r\n        case type.TYPE_ADD_USER :\r\n            console.log(action);\r\n            let updatedUsers = state.users;\r\n            let filteredUsers = state.users.filter(function (elem) {\r\n                return elem.id === action.payload.user.id;\r\n            });\r\n            if (state.users[action.payload.siteId] && !filteredUsers.length)\r\n                updatedUsers[action.payload.siteId].push(action.payload.user);\r\n            return {\r\n                ...state,\r\n                users: updatedUsers,\r\n                accountsTotal: updatedUsers.reduce(function (acum, curVal) {\r\n                    return acum + curVal.length\r\n                }, 0)\r\n            };\r\n\r\n        case type.TYPE_SET_ACTIVE_USER :\r\n            return {...state, activeUser: action.payload};\r\n\r\n        default :\r\n            return state;\r\n    }\r\n\r\n};","import { combineReducers } from 'redux';\r\nimport {siteReducer} from './sites'\r\n\r\nexport const rootReducer = combineReducers({\r\n    sites: siteReducer,\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { rootReducer, initialState } from '../reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const rootStore = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","import 'typeface-roboto';\r\nimport React, { Component } from 'react';\r\nimport {connect, Provider} from 'react-redux'\r\n// import { rootStore } from './store/index';\r\n\r\n\r\nimport MainScreen from \"./containers/ListSitesScreen/MainScreen\";\r\nimport Main from \"./containers/Application/Main\";\r\nimport Button from \"@material-ui/core/Button\"\r\nimport {rootStore} from \"./store\";\r\nimport {addActiveSite, isChoosen, setActiveSite} from \"./actions/site\";\r\n\r\n\r\n// Need jQuery? Install it with \"yarn add jquery\", then uncomment to require it.\r\n// const $ = require('jquery');\r\n\r\n\r\nclass App extends Component {\r\n\r\n    addSite = (site) => {\r\n        console.log(site);\r\n        this.props.setChoosen(!this.props.showApp);\r\n    }\r\n\r\n    render() {\r\n        const main = (\r\n            <Main/>\r\n        );\r\n        const mainScreen = (<MainScreen />);\r\n        return (\r\n\r\n            <div>\r\n                <Button onClick={this.addSite}> Switch  </Button>\r\n                {this.props.showApp && main}\r\n                {!this.props.showApp && mainScreen}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        showApp: store.sites.chosen\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        setChoosen: (e) => dispatch(isChoosen(e)),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport {rootStore} from \"./store\";\r\n\r\nReactDOM.render(<Provider store={rootStore}> <App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}