{"version":3,"sources":["constants/sitesconfig.js","actions/site.js","constants/SiteActionTypes.js","components/List/PortalsList.js","components/Top/DenseAppBar.js","components/Bottom/BottomLinks.js","containers/ListSitesScreen/MainScreen.js","components/Site/PrimaryTabs.js","containers/Application/Sites/UserTabs/Accounts.js","containers/Application/Sites/SiteTabs/Sites.js","components/Filters/Range.js","components/Filters/Selects.js","containers/Application/Main.js","reducers/sites.js","reducers/index.js","store/index.js","App.js","serviceWorker.js","index.js"],"names":["sites","name","id","url","setActiveSite","site","dispatch","type","payload","isChoosen","val","setActiveUser","user","PortalsList","addSite","console","log","newUser","props","addActiveSite","setChoosen","addUser","classes","this","buttonsList","map","elem","push","Button","variant","color","className","button","onClick","handler","root","Component","withStyles","theme","display","flexWrap","alignContent","height","justifyContent","margin","spacing","width","input","connect","store","e","siteId","DenseAppBar","state","open","anchorEl","CssBaseline","AppBar","clsx","appBar","appBarShift","Toolbar","IconButton","aria-label","setState","edge","menuButton","hide","src","alt","logo","Typography","noWrap","Fab","style","marginLeft","event","currentTarget","keepMounted","Boolean","onClose","handleSite","siteHandler","Drawer","drawer","anchor","paper","drawerPaper","drawerHeader","Divider","List","text","index","ListItem","key","ListItemIcon","ListItemText","primary","marginBottom","transition","transitions","create","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","marginRight","flexShrink","alignItems","padding","mixins","toolbar","content","flexGrow","contentShift","makeStyles","siteList","MainScreen","TabPanel","children","value","other","component","role","hidden","aria-labelledby","Box","p","useStyles","backgroundColor","palette","background","ScrollableTabsButtonAuto","React","useState","typePanel","tabs","setValue","tabPanels","labels","Tab","label","position","Tabs","onChange","newValue","indicatorColor","textColor","scrollButtons","Accounts","users","prevProps","prevState","snapshot","length","views","accountsTotal","Sites","addedSites","activeTotal","ownProps","currentSite","valuetext","RangeSlider","gutterBottom","Slider","valueLabelDisplay","getAriaValueText","currencies","container","textField","menu","MultilineTextFields","currency","setCurrency","handleChange","target","noValidate","autoComplete","TextField","select","SelectProps","MenuProps","helperText","option","MenuItem","native","Main","withFilters","addSiteTo","Grid","item","xl","xs","md","Switch","checked","inputProps","initialState","availableFilters","chosen","activeUser","rootReducer","combineReducers","action","includes","updatedUsers","filteredUsers","filter","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","rootStore","createStore","applyMiddleware","thunk","App","showApp","main","mainScreen","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"ufAoBeA,EApBD,CACV,CACIC,KAAM,SACNC,GAAI,EACJC,IAAK,0BAGT,CACIF,KAAM,cACNC,GAAI,EACJC,IAAK,oBAGT,CACIF,KAAM,UACNC,GAAI,EACJC,IAAK,gCCLAC,EAAgB,SAACC,GAC1B,OAAO,SAACC,GACJA,EAAS,CACLC,KCbwB,uBDcxBC,QAASH,MAKRI,EAAY,SAACC,GACtB,OAAO,SAACJ,GACJA,EAAS,CACLC,KCrBwB,uBDsBxBC,QAASE,MAcRC,EAAgB,SAACC,GAC1B,OAAO,SAACN,GACJA,EAAS,CACLC,KCnCwB,uBDoCxBC,QAASI,M,iBEhBfC,E,2MAGFC,QAAU,SAACT,GACPU,QAAQC,IAAIX,GACZ,IAAIY,EAAU,CAACf,GAAI,EAAGD,KAAM,SAC5B,EAAKiB,MAAMd,cAAcC,GACzB,EAAKa,MAAMC,cAAcd,GACzB,EAAKa,MAAME,YAAW,GACtB,EAAKF,MAAMG,QAAQhB,EAAMY,GACzB,EAAKC,MAAMP,cAAcM,I,wEAGnB,IAAD,OACEK,EAAWC,KAAKL,MAAhBI,QAIHE,EAAc,GAUlB,OARAxB,EAAMyB,KAAI,SAAUC,GAChBF,EAAYG,KACR,kBAACC,EAAA,EAAD,CAAQC,QAAQ,WAAWC,MAAM,UAAUC,UAAWT,EAAQU,OAAQC,QAAS,kBANvE,SAACP,GAAU,EAAKZ,QAAQY,GAMqDQ,CAAQR,KACxFA,EAAKzB,UAMd,yBAAK8B,UAAWT,EAAQa,MACnBX,O,GA9BSY,aAmDXC,OArEA,SAAAC,GAAK,MAAK,CACrBH,KAAM,CACFI,QAAS,OACTC,SAAU,OACVC,aAAc,aACdC,OAAQ,OACRC,eAAgB,UAGpBX,OAAQ,CACJY,OAAQN,EAAMO,QAAQ,GACtBC,MAAO,OAEXC,MAAO,CACHR,QAAS,WAuDFF,CAAmBW,aAJV,SAAAC,GACpB,MAAO,MAXgB,SAAC3C,GACxB,MAAO,CACHF,cAAe,SAAC8C,GAAD,OAAO5C,EAASF,EAAc8C,KAC7C/B,cAAe,SAAC+B,GAAD,OAAO5C,GFhEAD,EEgEuB6C,EF/D1C,SAAC5C,GACJA,EAAS,CACLC,KCLwB,uBDMxBC,QAASH,OAJQ,IAACA,GEiEtBe,WAAY,SAAC8B,GAAD,OAAO5C,EAASG,EAAUyC,KACtC7B,QAAS,SAAChB,EAAMY,GAAP,OAAmBX,EFvCb,SAACD,EAAMO,GAC1B,OAAO,SAACN,GACJA,EAAS,CACLC,KC3BiB,gBD4BjBC,QAAS,CAAC2C,OAAQ9C,EAAKH,GAAIU,KAAMA,MEmCAS,CAAQhB,EAAMY,KACnDN,cAAe,SAACC,GAAD,OAAUN,EAASK,EAAcC,QAQtBoC,CAA6CnC,I,yjBChB/E,IA8DMuC,E,YAEF,WAAYlC,GAAQ,IAAD,8BACf,4CAAMA,KACDmC,MAAQ,CACTC,KAAM,KACNC,SAAU,MAJC,E,sEAQT,IAAD,OACEjC,EAAWC,KAAKL,MAAhBI,QADF,EAGoBC,KAAK8B,MAAvBC,EAHF,EAGEA,KAAMC,EAHR,EAGQA,SAoBb,OACI,yBAAKxB,UAAWT,EAAQa,MACpB,kBAACqB,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAEI1B,UAAW2B,YAAKpC,EAAQqC,OAAT,eACVrC,EAAQsC,YAAcN,KAG3B,kBAACO,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACIhC,MAAM,UACNiC,aAAW,cACX9B,QA/BK,WACrB,EAAK+B,SAAS,CAACV,MAAM,KA+BLW,KAAK,QACLlC,UAAW2B,YAAKpC,EAAQ4C,WAAYZ,GAAQhC,EAAQ6C,OAEpD,kBAAC,IAAD,OAEJ,yBAAKC,IAAK,yBAA0BC,IAAK,kBAAmBtC,UAAWT,EAAQgD,OAC/E,kBAACC,EAAA,EAAD,CAAY1C,QAAQ,KAAK2C,QAAM,GAA/B,aAIA,kBAACC,EAAA,EAAD,CAAKC,MAAO,CAACC,WAAY,OAAQ7B,MAAM,OAAQJ,OAAO,QAASZ,MAAM,YAAYiC,aAAW,WAAW9B,QAhCnG,SAAA2C,GAChB,EAAKZ,SAAS,CAACT,SAAUqB,EAAMC,kBAgCf,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CACI3E,GAAG,cACHqD,SAAUA,EACVuB,aAAW,EACXxB,KAAMyB,QAAQxB,GACdyB,QApCA,WAChB,EAAKhB,SAAS,CAACT,SAAU,SAqCT,kBAAC,EAAD,CAAa0B,WAAY1D,KAAKL,MAAMgE,iBAIhD,kBAACC,EAAA,EAAD,CACIpD,UAAWT,EAAQ8D,OACnBvD,QAAQ,aACRwD,OAAO,OACP/B,KAAMA,EACNhC,QAAS,CACLgE,MAAOhE,EAAQiE,cAGnB,yBAAKxD,UAAWT,EAAQkE,cACpB,kBAAC1B,EAAA,EAAD,CAAY7B,QA9DF,WACtB,EAAK+B,SAAS,CAACV,MAAM,MA8DL,kBAAC,IAAD,QAGR,kBAACmC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACK,CAAC,QAAS,UAAW,aAAc,UAAUjE,KAAI,SAACkE,EAAMC,GAAP,OAC9C,kBAACC,EAAA,EAAD,CAAU7D,QAAM,EAAC8D,IAAKH,GAClB,kBAACI,EAAA,EAAD,KAAeH,EAAQ,IAAM,EAAI,kBAAC,IAAD,MAAgB,kBAAC,IAAD,OACjD,kBAACI,EAAA,EAAD,CAAcC,QAASN,SAInC,kBAACF,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACK,CAAC,WAAY,QAAS,QAAQjE,KAAI,SAACkE,EAAMC,GAAP,OAC/B,kBAACC,EAAA,EAAD,CAAU7D,QAAM,EAAC8D,IAAKH,GAClB,kBAACI,EAAA,EAAD,KAAeH,EAAQ,IAAM,EAAI,kBAAC,IAAD,MAAgB,kBAAC,IAAD,OACjD,kBAACI,EAAA,EAAD,CAAcC,QAASN,e,GAnG5BvD,aA+GZC,eA3KA,SAAAC,GAAK,MAAK,CACrBH,KAAM,CACFI,QAAS,OACT2D,aAAc,QAElBvC,OAAQ,CACJwC,WAAY7D,EAAM8D,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQhE,EAAM8D,YAAYE,OAAOC,MACjCC,SAAUlE,EAAM8D,YAAYI,SAASC,iBAG7C7C,YAAa,CACTd,MAAM,eAAD,OAdO,IAcP,OACL6B,WAfY,IAgBZwB,WAAY7D,EAAM8D,YAAYC,OAAO,CAAC,SAAU,SAAU,CACtDC,OAAQhE,EAAM8D,YAAYE,OAAOI,QACjCF,SAAUlE,EAAM8D,YAAYI,SAASG,kBAG7CzC,WAAY,CACR0C,YAAatE,EAAMO,QAAQ,IAE/BsB,KAAM,CACF5B,QAAS,QAEb6C,OAAQ,CACJtC,MA5BY,IA6BZ+D,WAAY,GAEhBtB,YAAa,CACTzC,MAhCY,KAkChB0C,aAAa,EAAD,CACRjD,QAAS,OACTuE,WAAY,SACZC,QAASzE,EAAMO,QAAQ,EAAG,IACvBP,EAAM0E,OAAOC,QAJR,CAKRtE,eAAgB,aAEpBuE,QAAS,CACLC,SAAU,EACVJ,QAASzE,EAAMO,QAAQ,GACvBsD,WAAY7D,EAAM8D,YAAYC,OAAO,SAAU,CAC3CC,OAAQhE,EAAM8D,YAAYE,OAAOC,MACjCC,SAAUlE,EAAM8D,YAAYI,SAASC,gBAEzC9B,YAhDY,KAkDhByC,aAAc,CACVjB,WAAY7D,EAAM8D,YAAYC,OAAO,SAAU,CAC3CC,OAAQhE,EAAM8D,YAAYE,OAAOI,QACjCF,SAAUlE,EAAM8D,YAAYI,SAASG,iBAEzChC,WAAY,GAEhBL,KAAM,CACFxB,MAAO,WAmHAT,CAAmBe,G,sDCjOhBiE,YAAW,CACzBlF,KAAM,CACFW,MAAO,OCAf/B,QAAQC,IAAIsG,G,IAwBGC,G,iLAhBP,OAEI,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,W,GAPSnF,a,0DCNzB,SAASoF,GAAStG,GAAQ,IACduG,EAAqCvG,EAArCuG,SAAUC,EAA2BxG,EAA3BwG,MAAO9B,EAAoB1E,EAApB0E,MAAU+B,EADd,aACwBzG,EADxB,8BAIrB,OADAH,QAAQC,IAAI0G,EAAO9B,GAEf,kBAACrB,EAAA,EAAD,eACIqD,UAAU,MACVC,KAAK,WACLC,OAAQJ,IAAU9B,EAClB1F,GAAE,mCAA8B0F,GAChCmC,kBAAA,8BAAwCnC,IACpC+B,GAEJ,kBAACK,GAAA,EAAD,CAAKC,EAAG,GAAIR,IAkBxB,IAAMS,GAAYb,aAAW,SAAA/E,GAAK,MAAK,CACnCH,KAAM,CACFgF,SAAU,EACVrE,MAAO,OACPqF,gBAAiB7F,EAAM8F,QAAQC,WAAW/C,WAInC,SAASgD,GAAyBpH,GAC7C,IAAMI,EAAU4G,KADoC,EAE1BK,IAAMC,SAAStH,EAAMuH,UAAYvH,EAAMwH,KAAK,GAAGxH,MAAMhB,IAF3B,mBAE7CwH,EAF6C,KAEtCiB,EAFsC,KAQhDC,EAAY1H,EAAMwH,KAAKjH,KAAI,SAACC,GAC5B,OACI,kBAAC8F,GAAD,CAAUE,MAAOA,EAAO9B,MAAO1E,EAAMuH,UAAY/G,EAAKR,MAAMhB,GAAI4F,IAAK5E,EAAMuH,UAAY/G,EAAKR,MAAMhB,IAC7FwB,MAKTmH,EAAS3H,EAAMwH,KAAKjH,KAAI,SAAUC,GAElC,OACI,kBAACoH,GAAA,EAAD,eAAKpB,MAAOxG,EAAMuH,UAAY/G,EAAKR,MAAMhB,GAAI6I,MAAOrH,EAAKR,MAAMjB,OAlCxD2F,EAkC4E1E,EAAMuH,UAAY/G,EAAKR,MAAMhB,GAjCjH,CACHA,GAAG,uBAAD,OAAyB0F,GAC3B,gBAAgB,4BAAhB,OAA6CA,KA+BzC,CAAqHE,IAAK5E,EAAMuH,UAAY/G,EAAKR,MAAMjB,QAlCnK,IAAmB2F,KAsCf,OACI,yBAAK7D,UAAWT,EAAQa,MACpB,kBAACsB,EAAA,EAAD,CAAQuF,SAAS,SAASlH,MAAM,WAC5B,kBAACmH,GAAA,EAAD,CACIvB,MAAOA,EACPwB,SAxBK,SAACtE,EAAOuE,GACzBR,EAASQ,IAwBGC,eAAe,UACfC,UAAU,UACVxH,QAAQ,aACRyH,cAAc,OACdvF,aAAW,gCAEV8E,IAIRD,G,IC3EPW,G,2MAEFlG,MAAQ,CACJmG,MAAO,CAAC,IACRnJ,KAAM,CAACH,GAAI,EAAGC,IAAK,GAAIF,KAAM,K,mFAI7BsB,KAAKyC,SAAS,CAACwF,MAAOjI,KAAKL,MAAMsI,MAAOnJ,KAAMkB,KAAKL,MAAMb,S,yCAG1CoJ,EAAWC,EAAWC,GACjCF,EAAUD,MAAMI,SAAWrI,KAAKL,MAAMsI,MAAMI,QAC5CrI,KAAKyC,SAAS,CAACwF,MAAOjI,KAAKL,MAAMsI,U,+BAI/B,IAAD,EAEgCjI,KAAKL,MAAnCb,EAFF,EAEEA,KAAMmJ,EAFR,EAEQA,MAGTK,EALC,EAEeC,cAGQ,GAAKN,EAAMnJ,EAAKH,IAAIuB,KAAI,SAAUC,GAC1D,OACI,6BAASxB,GAAIG,EAAKH,GAAIkE,IAAK/D,EAAKF,IAAKuE,MAAO,CAAC5B,MAAM,OAAQJ,OAAO,SAAUzC,KAAMyB,EAAKzB,UAI/F,OACI,6BACI,kBAAC,GAAD,CAAayI,KAAMmB,EAAOpB,UAAW,iB,GA9B9BrG,aAiDRY,gBAbS,SAAAC,GACpB,MAAO,CACHuG,MAAOvG,EAAMjD,MAAMwJ,MACnBM,cAAe7G,EAAMjD,MAAM8J,kBAIR,SAACxJ,GACxB,MAAO,CACHK,cAAe,SAACuC,GAAD,OAAO5C,EAASK,EAAcuC,QAItCF,CAA6CuG,ICjDtDQ,G,iLAGQ,IAEDC,EAAczI,KAAKL,MAAnB8I,WACDhK,EAAQuB,KAAKL,MAAM+I,YAAc,GAAKD,EAAWvI,KAAI,SAAUC,GAC/D,OACI,kBAAC,GAAD,CAAUrB,KAAMqB,EAAMxB,GAAIwB,EAAKxB,GAAID,KAAMyB,EAAKzB,UAItD,OACI,6BACI,kBAAC,GAAD,CAAayI,KAAM1I,EAAOyI,UAAW,c,GAdjCrG,aAmCLY,gBAfS,SAACC,EAAOiH,GAE5B,MAAO,CACHF,WAAY/G,EAAMjD,MAAMgK,WACxBG,YAAalH,EAAMjD,MAAMmK,YACzBF,YAAahH,EAAMjD,MAAMiK,gBAIN,SAAC3J,GACxB,MAAO,CACHF,cAAe,SAAC8C,GAAD,OAAO5C,EAASF,EAAc8C,QAItCF,CAA6C+G,I,UC3CtD7B,GAAYb,YAAW,CACzBlF,KAAM,CACFW,MAAO,OAIf,SAASsH,GAAU1C,GACf,MAAM,GAAN,OAAUA,EAAV,SAGW,SAAS2C,KACpB,IAAM/I,EAAU4G,KADkB,EAERK,IAAMC,SAAS,CAAC,GAAI,KAFZ,mBAE3Bd,EAF2B,KAEpBiB,EAFoB,KAQlC,OACI,yBAAK5G,UAAWT,EAAQa,MACpB,kBAACoC,EAAA,EAAD,CAAYrE,GAAG,eAAeoK,cAAY,GAA1C,qBAGA,kBAACC,GAAA,EAAD,CACI7C,MAAOA,EACPwB,SAXS,SAACtE,EAAOuE,GACzBR,EAASQ,IAWDqB,kBAAkB,OAClBzC,kBAAgB,eAChB0C,iBAAkBL,M,wBC5B5BM,GAAa,CACf,CACIhD,MAAO,MACPqB,MAAO,KAEX,CACIrB,MAAO,MACPqB,MAAO,UAEX,CACIrB,MAAO,MACPqB,MAAO,UAEX,CACIrB,MAAO,MACPqB,MAAO,SAITb,GAAYb,aAAW,SAAA/E,GAAK,MAAK,CACnCqI,UAAW,CACPpI,QAAS,OACTC,SAAU,QAEdoI,UAAW,CACPjG,WAAYrC,EAAMO,QAAQ,GAC1B+D,YAAatE,EAAMO,QAAQ,GAC3BC,MAAO,KAEX+H,KAAM,CACF/H,MAAO,SAIA,SAASgI,KACpB,IAAMxJ,EAAU4G,KAD0B,EAEVK,IAAMC,SAAS,OAFL,mBAEnCuC,EAFmC,KAEzBC,EAFyB,KAIpCC,EAAe,SAAArG,GACjBoG,EAAYpG,EAAMsG,OAAOxD,QAG7B,OACI,0BAAM3F,UAAWT,EAAQqJ,UAAWQ,YAAU,EAACC,aAAa,OACxD,6BACI,kBAACC,GAAA,EAAD,CACInL,GAAG,2BACHoL,QAAM,EACNvC,MAAM,SACNhH,UAAWT,EAAQsJ,UACnBlD,MAAOqD,EACP7B,SAAU+B,EACVM,YAAa,CACTC,UAAW,CACPzJ,UAAWT,EAAQuJ,OAG3BY,WAAW,8BACX7I,OAAO,UAEN8H,GAAWjJ,KAAI,SAAAiK,GAAM,OAClB,kBAACC,GAAA,EAAD,CAAU7F,IAAK4F,EAAOhE,MAAOA,MAAOgE,EAAOhE,OACtCgE,EAAO3C,WAIpB,kBAACsC,GAAA,EAAD,CACInL,GAAG,kCACHoL,QAAM,EACNvC,MAAM,gBACNhH,UAAWT,EAAQsJ,UACnBlD,MAAOqD,EACP7B,SAAU+B,EACVM,YAAa,CACTK,QAAQ,EACRJ,UAAW,CACPzJ,UAAWT,EAAQuJ,OAG3BY,WAAW,8BACX7I,OAAO,UAEN8H,GAAWjJ,KAAI,SAAAiK,GAAM,OAClB,4BAAQ5F,IAAK4F,EAAOhE,MAAOA,MAAOgE,EAAOhE,OACpCgE,EAAO3C,YAKxB,6BACI,kBAACsC,GAAA,EAAD,CACInL,GAAG,yBACHoL,QAAM,EACNvC,MAAM,SACNhH,UAAWT,EAAQsJ,UACnBlD,MAAOqD,EACP7B,SAAU+B,EACVM,YAAa,CACTC,UAAW,CACPzJ,UAAWT,EAAQuJ,OAG3BY,WAAW,8BACX7I,OAAO,SACPf,QAAQ,UAEP6I,GAAWjJ,KAAI,SAAAiK,GAAM,OAClB,kBAACC,GAAA,EAAD,CAAU7F,IAAK4F,EAAOhE,MAAOA,MAAOgE,EAAOhE,OACtCgE,EAAO3C,WAIpB,kBAACsC,GAAA,EAAD,CACInL,GAAG,gCACHoL,QAAM,EACNvC,MAAM,gBACNhH,UAAWT,EAAQsJ,UACnBlD,MAAOqD,EACP7B,SAAU+B,EACVM,YAAa,CACTK,QAAQ,EACRJ,UAAW,CACPzJ,UAAWT,EAAQuJ,OAG3BY,WAAW,8BACX7I,OAAO,SACPf,QAAQ,UAEP6I,GAAWjJ,KAAI,SAAAiK,GAAM,OAClB,4BAAQ5F,IAAK4F,EAAOhE,MAAOA,MAAOgE,EAAOhE,OACpCgE,EAAO3C,YAKxB,6BACI,kBAACsC,GAAA,EAAD,CACInL,GAAG,2BACHoL,QAAM,EACNvC,MAAM,SACNhH,UAAWT,EAAQsJ,UACnBlD,MAAOqD,EACP7B,SAAU+B,EACVM,YAAa,CACTC,UAAW,CACPzJ,UAAWT,EAAQuJ,OAG3BY,WAAW,8BACX7I,OAAO,SACPf,QAAQ,YAEP6I,GAAWjJ,KAAI,SAAAiK,GAAM,OAClB,kBAACC,GAAA,EAAD,CAAU7F,IAAK4F,EAAOhE,MAAOA,MAAOgE,EAAOhE,OACtCgE,EAAO3C,WAIpB,kBAACsC,GAAA,EAAD,CACInL,GAAG,kCACHoL,QAAM,EACNvC,MAAM,gBACNhH,UAAWT,EAAQsJ,UACnBlD,MAAOqD,EACP7B,SAAU+B,EACVM,YAAa,CACTK,QAAQ,EACRJ,UAAW,CACPzJ,UAAWT,EAAQuJ,OAG3BY,WAAW,8BACX7I,OAAO,SACPf,QAAQ,YAEP6I,GAAWjJ,KAAI,SAAAiK,GAAM,OAClB,4BAAQ5F,IAAK4F,EAAOhE,MAAOA,MAAOgE,EAAOhE,OACpCgE,EAAO3C,a,ICtHrB8C,G,iLAjCP,OAFA9K,QAAQC,IAAIO,KAAKL,OAGb,6BACI,kBAAC,EAAD,CAAa4K,aAAa,EAAM5G,YAAa3D,KAAKwK,YAClD,kBAACC,GAAA,EAAD,CAAMrB,WAAS,GACX,kBAACqB,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzB,kBAACC,GAAA,EAAD,CACIC,SAAS,EAET5E,MAAM,WACN5F,MAAM,UACNyK,WAAY,CAAE,aAAc,sBAEhC,kBAAClC,GAAD,MACA,kBAACgB,GAAA,EAAD,CAAWnL,GAAG,iBAAiB6I,MAAM,WAAWlH,QAAQ,aACxD,kBAAC,GAAD,OAEJ,kBAACmK,GAAA,EAAD,CAAMC,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GACzB,kBAAC,GAAD,a,GA7BLhK,a,skBCnBZ,IAAMoK,GAAe,CACxBxC,WAAY,GACZyC,iBAAkB,GAClBtC,YAAa,GACbuC,QAAQ,EACRlD,MAAO,GACPmD,WAAY,KACZ1C,YAAa,EACbH,cAAe,GCNN8C,GAAcC,aAAgB,CACvC7M,MDQuB,WAAmC,IAAlCqD,EAAiC,uDAAzBmJ,GAAcM,EAAW,uCAEzD,OADA/L,QAAQC,IAAI8L,EAAQzJ,GACZyJ,EAAOvM,MAEX,IXhB4B,uBWiBxB,IAAMP,EAAQqD,EAAM2G,WACdR,EAAQnG,EAAMmG,MAKpB,OAJIxJ,EAAM+M,SAASD,EAAOtM,WACtBR,EAAM2B,KAAKmL,EAAOtM,SAClBgJ,EAAMsD,EAAOtM,QAAQN,IAAM,IAExB,MAAImD,EAAX,CAAkB2G,WAAYhK,EAAOwJ,MAAOA,EAAOS,YAAajK,EAAM4J,SAE1E,IXxB4B,uBWyBxB,OAAO,MAAIvG,EAAX,CAAkB8G,aAAY,IAElC,IX1B4B,uBW2BxB,OAAO,MAAI9G,EAAX,CAAkBqJ,OAAQI,EAAOtM,UAErC,IX1BqB,gBW2BjBO,QAAQC,IAAI8L,GACZ,IAAIE,EAAe3J,EAAMmG,MACrByD,EAAgB5J,EAAMmG,MAAM0D,QAAO,SAAUxL,GAC7C,OAAOA,EAAKxB,KAAO4M,EAAOtM,QAAQI,KAAKV,MAI3C,OAFImD,EAAMmG,MAAMsD,EAAOtM,QAAQ2C,UAAY8J,EAAcrD,QACrDoD,EAAaF,EAAOtM,QAAQ2C,QAAQxB,KAAKmL,EAAOtM,QAAQI,MACrD,MACAyC,EADP,CAEImG,MAAOwD,EACPlD,cAAekD,EAAapD,SAGpC,IXvC4B,uBWwCxB,OAAO,MAAIvG,EAAX,CAAkBsJ,WAAYG,EAAOtM,UAEzC,QACI,OAAO6C,M,SE7Cb8J,GAAmBC,OAAOC,sCAAwCC,KAE3DC,GAAYC,aAAYZ,GAAaO,GAAiBM,aAAgBC,QCW7EC,G,2MAEF7M,QAAU,SAACT,GACPU,QAAQC,IAAIX,GACZ,EAAKa,MAAME,YAAY,EAAKF,MAAM0M,U,wEAIlC,IAAMC,EACF,kBAAC,GAAD,MAEEC,EAAc,kBAAC,GAAD,MACpB,OAEI,6BACI,kBAAClM,EAAA,EAAD,CAAQK,QAASV,KAAKT,SAAtB,aACCS,KAAKL,MAAM0M,SAAWC,GACrBtM,KAAKL,MAAM0M,SAAWE,O,GAjBtB1L,aAqCHY,gBAbS,SAAAC,GACpB,MAAO,CACH2K,QAAS3K,EAAMjD,MAAM0M,WAGF,SAACpM,GACxB,MAAO,CAEHc,WAAY,SAAC8B,GAAD,OAAO5C,EAASG,EAAUyC,QAK/BF,CAA6C2K,IC1CxC5I,QACW,cAA7BqI,OAAOW,SAASC,UAEe,UAA7BZ,OAAOW,SAASC,UAEhBZ,OAAOW,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAO,kBAAC,IAAD,CAAUlL,MAAOsK,IAAjB,IAA6B,kBAAC,GAAD,OAAoBa,SAASC,eAAe,SDyHnF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.bfb46f6d.chunk.js","sourcesContent":["const sites = [\r\n    {\r\n        name: 'SVADBA',\r\n        id: 1,\r\n        url: \"http://www.google.com/\"\r\n    },\r\n\r\n    {\r\n        name: 'Jump 4 Love',\r\n        id: 2,\r\n        url: \"https://j4l.com/\"\r\n    },\r\n\r\n    {\r\n        name: 'Romance',\r\n        id: 3,\r\n        url: \"https://romancecompass.com/\"\r\n    }\r\n];\r\n\r\nexport default sites","import * as type from './../constants/SiteActionTypes'\r\n\r\nexport const addActiveSite = (site) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: type.TYPE_ADD_ACTIVE_SITE,\r\n            payload: site\r\n        })\r\n    }\r\n}\r\n\r\nexport const setActiveSite = (site) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: type.TYPE_SET_ACTIVE_SITE,\r\n            payload: site\r\n        })\r\n    }\r\n}\r\n\r\nexport const isChoosen = (val) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: type.TYPE_SET_CHOSEN_TYPE,\r\n            payload: val\r\n        })\r\n    }\r\n}\r\n\r\nexport const addUser = (site, user) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: type.TYPE_ADD_USER,\r\n            payload: {siteId: site.id, user: user}\r\n        })\r\n    }\r\n}\r\n\r\nexport const setActiveUser = (user) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: type.TYPE_SET_ACTIVE_USER,\r\n            payload: user\r\n        })\r\n    }\r\n}","export const TYPE_ADD_ACTIVE_SITE = 'TYPE_ADD_ACTIVE_SITE';\r\nexport const TYPE_SET_ACTIVE_SITE = 'TYPE_SET_ACTIVE_SITE';\r\nexport const TYPE_SET_CHOSEN_TYPE = 'TYPE_SET_CHOSEN_TYPE';\r\n\r\n\r\nexport const TYPE_ADD_USER = 'TYPE_ADD_USER';\r\nexport const TYPE_SET_ACTIVE_USER = 'TYPE_SET_ACTIVE_USER';","import React, {Component} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport sites from './../../constants/sitesconfig'\r\nimport {addActiveSite, addUser, isChoosen, setActiveSite, setActiveUser} from \"../../actions/site\";\r\nimport {connect} from \"react-redux\";\r\nimport withStyles from \"@material-ui/core/styles/withStyles\";\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        alignContent: 'flex-start',\r\n        height: '100%',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    button: {\r\n        margin: theme.spacing(1),\r\n        width: '25%'\r\n    },\r\n    input: {\r\n        display: 'none',\r\n    },\r\n});\r\n\r\nclass PortalsList extends Component\r\n{\r\n\r\n    addSite = (site) => {\r\n        console.log(site);\r\n        let newUser = {id: 1, name: \"girl1\"};\r\n        this.props.setActiveSite(site);\r\n        this.props.addActiveSite(site);\r\n        this.props.setChoosen(true);\r\n        this.props.addUser(site, newUser);\r\n        this.props.setActiveUser(newUser);\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props\r\n\r\n        const handler = (elem) => {this.addSite(elem);}\r\n\r\n        let buttonsList = [];\r\n\r\n        sites.map(function (elem) {\r\n            buttonsList.push(\r\n                <Button variant=\"outlined\" color=\"primary\" className={classes.button} onClick={() => handler(elem)}>\r\n                    {elem.name}\r\n                </Button>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                {buttonsList}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveSite: (e) => dispatch(setActiveSite(e)),\r\n        addActiveSite: (e) => dispatch(addActiveSite(e)),\r\n        setChoosen: (e) => dispatch(isChoosen(e)),\r\n        addUser: (site, newUser) => dispatch(addUser(site, newUser)),\r\n        setActiveUser: (user) => dispatch(setActiveUser(user)),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {};\r\n}\r\n\r\nexport default withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(PortalsList));","// import React from 'react';\r\n// import { makeStyles } from '@material-ui/core/styles';\r\n// import AppBar from '@material-ui/core/AppBar';\r\n// import Toolbar from '@material-ui/core/Toolbar';\r\n// import Typography from '@material-ui/core/Typography';\r\n// import IconButton from '@material-ui/core/IconButton';\r\n// import MenuIcon from '@material-ui/icons/Menu';\r\n//\r\n// const useStyles = makeStyles(theme => ({\r\n//     root: {\r\n//         flexGrow: 1,\r\n//     },\r\n//     menuButton: {\r\n//         marginRight: theme.spacing(2),\r\n//     },\r\n// }));\r\n//\r\n// export default function DenseAppBar() {\r\n//     const classes = useStyles();\r\n//\r\n//     return (\r\n//         <div className={classes.root}>\r\n//             <AppBar position=\"static\">\r\n//                 <Toolbar variant=\"dense\">\r\n//                     <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n//                         <MenuIcon />\r\n//                     </IconButton>\r\n//                     <Typography variant=\"h6\" color=\"inherit\">\r\n//                         Help-Chat\r\n//                     </Typography>\r\n//                 </Toolbar>\r\n//             </AppBar>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\nimport React, {Component} from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles, useTheme, withStyles} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport {Icon} from \"@material-ui/core\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport PortalsList from \"../List/PortalsList\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        display: 'flex',\r\n        marginBottom: '50px'\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    logo: {\r\n        width: '50px',\r\n    }\r\n});\r\n\r\nclass DenseAppBar extends  Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: null,\r\n            anchorEl: null\r\n        };\r\n    }\r\n\r\n    render() {\r\n        const {classes} = this.props;\r\n\r\n        const {open, anchorEl} = this.state;\r\n\r\n        const handleDrawerOpen = () => {\r\n            this.setState({open: true});\r\n        };\r\n\r\n        const handleDrawerClose = () => {\r\n            this.setState({open: false});\r\n        };\r\n\r\n\r\n\r\n        const handleClick = event => {\r\n            this.setState({anchorEl: event.currentTarget});\r\n        };\r\n\r\n        const handleClose = () => {\r\n            this.setState({anchorEl: null});\r\n        };\r\n\r\n        return (\r\n            <div className={classes.root}>\r\n                <CssBaseline />\r\n                <AppBar\r\n\r\n                    className={clsx(classes.appBar, {\r\n                        [classes.appBarShift]: open,\r\n                    })}\r\n                >\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            color=\"inherit\"\r\n                            aria-label=\"open drawer\"\r\n                            onClick={handleDrawerOpen}\r\n                            edge=\"start\"\r\n                            className={clsx(classes.menuButton, open && classes.hide)}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <img src={'/my-app/build/logo.png'} alt={'help-chat image'} className={classes.logo}/>\r\n                        <Typography variant=\"h6\" noWrap>\r\n                            HELP-CHAT\r\n                        </Typography>\r\n\r\n                        <Fab style={{marginLeft: '20px', width:\"36px\", height:\"30px\"}} color=\"secondary\" aria-label=\"Add Site\" onClick={handleClick}>\r\n                            <AddIcon />\r\n                        </Fab>\r\n                        <Menu\r\n                            id=\"simple-menu\"\r\n                            anchorEl={anchorEl}\r\n                            keepMounted\r\n                            open={Boolean(anchorEl)}\r\n                            onClose={handleClose}\r\n                        >\r\n                            <PortalsList handleSite={this.props.siteHandler}/>\r\n                        </Menu>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <Drawer\r\n                    className={classes.drawer}\r\n                    variant=\"persistent\"\r\n                    anchor=\"left\"\r\n                    open={open}\r\n                    classes={{\r\n                        paper: classes.drawerPaper,\r\n                    }}\r\n                >\r\n                    <div className={classes.drawerHeader}>\r\n                        <IconButton onClick={handleDrawerClose}>\r\n                            <ChevronLeftIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <Divider />\r\n                    <List>\r\n                        {['Inbox', 'Starred', 'Send email', 'Drafts'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                    <Divider />\r\n                    <List>\r\n                        {['All mail', 'Trash', 'Spam'].map((text, index) => (\r\n                            <ListItem button key={text}>\r\n                                <ListItemIcon>{index % 2 === 0 ? <InboxIcon /> : <MailIcon />}</ListItemIcon>\r\n                                <ListItemText primary={text} />\r\n                            </ListItem>\r\n                        ))}\r\n                    </List>\r\n                </Drawer>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles(styles)(DenseAppBar)","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\r\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport RestoreIcon from '@material-ui/icons/Restore';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 500,\r\n    },\r\n});\r\n\r\nexport default function BottomLinks() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState('recents');\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <BottomNavigation value={value} onChange={handleChange} className={classes.root}>\r\n            <BottomNavigationAction label=\"Recents\" value=\"recents\" icon={<RestoreIcon />} />\r\n            <BottomNavigationAction label=\"Favorites\" value=\"favorites\" icon={<FavoriteIcon />} />\r\n            <BottomNavigationAction label=\"Nearby\" value=\"nearby\" icon={<LocationOnIcon />} />\r\n            <BottomNavigationAction label=\"Folder\" value=\"folder\" icon={<FolderIcon />} />\r\n        </BottomNavigation>\r\n    );\r\n}","import DenseAppBar from \"./../../components/Top/DenseAppBar\";\r\nimport 'typeface-roboto';\r\nimport React, { Component } from 'react';\r\nimport {connect, Provider} from 'react-redux'\r\nimport {setActiveSite, addActiveSite, isChoosen, setActiveUser, addUser} from \"../../actions/site\";\r\n//import { rootStore } from './store/index';\r\n\r\nimport PortalsList from \"./../../components/List/PortalsList\";\r\nimport BottomLinks from \"./../../components/Bottom/BottomLinks\";\r\nimport siteList from \"./../../constants/sitesconfig\"\r\n\r\nconsole.log(siteList);\r\n// Need jQuery? Install it with \"yarn add jquery\", then uncomment to require it.\r\n// const $ = require('jquery');\r\n\r\n\r\nclass MainScreen extends Component {\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div>\r\n                <DenseAppBar  />\r\n                <PortalsList />\r\n                {/*<BottomLinks/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = store => {\r\n    return {};\r\n}\r\n\r\nexport default MainScreen;\r\n","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    console.log(value, index)\r\n    return (\r\n        <Typography\r\n            component=\"div\"\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-auto-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-auto-tab-${index}`}\r\n            {...other}\r\n        >\r\n            <Box p={3}>{children}</Box>\r\n        </Typography>\r\n    );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n    children: PropTypes.node,\r\n    index: PropTypes.any.isRequired,\r\n    value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n    return {\r\n        id: `scrollable-auto-tab-${index}`,\r\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n}));\r\n\r\nexport default function ScrollableTabsButtonAuto(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(props.typePanel + props.tabs[0].props.id);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    let tabPanels = props.tabs.map((elem) => {\r\n        return (\r\n            <TabPanel value={value} index={props.typePanel + elem.props.id} key={props.typePanel + elem.props.id}>\r\n                {elem}\r\n            </TabPanel>\r\n        );\r\n\r\n    });\r\n    let labels = props.tabs.map(function (elem) {\r\n\r\n        return (\r\n            <Tab value={props.typePanel + elem.props.id} label={elem.props.name} {...a11yProps(props.typePanel + elem.props.id)} key={props.typePanel + elem.props.name } />\r\n        );\r\n    })\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\" color=\"default\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    variant=\"scrollable\"\r\n                    scrollButtons=\"auto\"\r\n                    aria-label=\"scrollable auto tabs example\"\r\n                >\r\n                    {labels}\r\n                </Tabs>\r\n            </AppBar>\r\n\r\n            {tabPanels}\r\n        </div>\r\n    );\r\n}","\r\nimport 'typeface-roboto';\r\nimport React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\n//import { rootStore } from './store/index';\r\nimport {setActiveUser} from \"./../../../../actions/site\"\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport PrimaryTabs from \"../../../../components/Site/PrimaryTabs\";\r\n\r\n// Need jQuery? Install it with \"yarn add jquery\", then uncomment to require it.\r\n// const $ = require('jquery');\r\n\r\n\r\nclass Accounts extends Component {\r\n\r\n    state = {\r\n        users: [[]],\r\n        site: {id: 0, url: '', name: ''}\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({users: this.props.users, site: this.props.site})\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (prevProps.users.length !== this.props.users.length) {\r\n            this.setState({users: this.props.users})\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const {site, users, accountsTotal} = this.props;\r\n\r\n\r\n        let views = accountsTotal > 0 && users[site.id].map(function (elem) {\r\n            return (\r\n                <webview id={site.id} src={site.url} style={{width:'100%', height:'500px'}} name={elem.name}></webview>\r\n            );\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <PrimaryTabs tabs={views} typePanel={'account'}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        users: store.sites.users,\r\n        accountsTotal: store.sites.accountsTotal\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveUser: (e) => dispatch(setActiveUser(e)),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Accounts)\r\n","\r\nimport 'typeface-roboto';\r\nimport React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {setActiveSite} from \"../../../../actions/site\";\r\n\r\nimport Accounts from \"../UserTabs/Accounts\";\r\nimport PrimaryTabs from \"../../../../components/Site/PrimaryTabs\";\r\n\r\n// Need jQuery? Install it with \"yarn add jquery\", then uncomment to require it.\r\n// const $ = require('jquery');\r\n\r\n\r\nclass Sites extends Component {\r\n\r\n\r\n    render() {\r\n\r\n        let {addedSites} = this.props;\r\n        let sites = this.props.activeTotal > 0 && addedSites.map(function (elem) {\r\n            return (\r\n                <Accounts site={elem} id={elem.id} name={elem.name}/>\r\n            );\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                <PrimaryTabs tabs={sites} typePanel={'site'}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (store, ownProps) => {\r\n\r\n    return {\r\n        addedSites: store.sites.addedSites,\r\n        currentSite: store.sites.currentSite,\r\n        activeTotal: store.sites.activeTotal,\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        setActiveSite: (e) => dispatch(setActiveSite(e)),\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Sites)\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}°C`;\r\n}\r\n\r\nexport default function RangeSlider() {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([20, 37]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Temperature range\r\n            </Typography>\r\n            <Slider\r\n                value={value}\r\n                onChange={handleChange}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n            />\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst currencies = [\r\n    {\r\n        value: 'USD',\r\n        label: '$',\r\n    },\r\n    {\r\n        value: 'EUR',\r\n        label: '€',\r\n    },\r\n    {\r\n        value: 'BTC',\r\n        label: '฿',\r\n    },\r\n    {\r\n        value: 'JPY',\r\n        label: '¥',\r\n    },\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    container: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n        marginLeft: theme.spacing(1),\r\n        marginRight: theme.spacing(1),\r\n        width: 200,\r\n    },\r\n    menu: {\r\n        width: 200,\r\n    },\r\n}));\r\n\r\nexport default function MultilineTextFields() {\r\n    const classes = useStyles();\r\n    const [currency, setCurrency] = React.useState('EUR');\r\n\r\n    const handleChange = event => {\r\n        setCurrency(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <form className={classes.container} noValidate autoComplete=\"off\">\r\n            <div>\r\n                <TextField\r\n                    id=\"standard-select-currency\"\r\n                    select\r\n                    label=\"Select\"\r\n                    className={classes.textField}\r\n                    value={currency}\r\n                    onChange={handleChange}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    helperText=\"Please select your currency\"\r\n                    margin=\"normal\"\r\n                >\r\n                    {currencies.map(option => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <TextField\r\n                    id=\"standard-select-currency-native\"\r\n                    select\r\n                    label=\"Native select\"\r\n                    className={classes.textField}\r\n                    value={currency}\r\n                    onChange={handleChange}\r\n                    SelectProps={{\r\n                        native: true,\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    helperText=\"Please select your currency\"\r\n                    margin=\"normal\"\r\n                >\r\n                    {currencies.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n                </TextField>\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    id=\"filled-select-currency\"\r\n                    select\r\n                    label=\"Select\"\r\n                    className={classes.textField}\r\n                    value={currency}\r\n                    onChange={handleChange}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    helperText=\"Please select your currency\"\r\n                    margin=\"normal\"\r\n                    variant=\"filled\"\r\n                >\r\n                    {currencies.map(option => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <TextField\r\n                    id=\"filled-select-currency-native\"\r\n                    select\r\n                    label=\"Native select\"\r\n                    className={classes.textField}\r\n                    value={currency}\r\n                    onChange={handleChange}\r\n                    SelectProps={{\r\n                        native: true,\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    helperText=\"Please select your currency\"\r\n                    margin=\"normal\"\r\n                    variant=\"filled\"\r\n                >\r\n                    {currencies.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n                </TextField>\r\n            </div>\r\n            <div>\r\n                <TextField\r\n                    id=\"outlined-select-currency\"\r\n                    select\r\n                    label=\"Select\"\r\n                    className={classes.textField}\r\n                    value={currency}\r\n                    onChange={handleChange}\r\n                    SelectProps={{\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    helperText=\"Please select your currency\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                >\r\n                    {currencies.map(option => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <TextField\r\n                    id=\"outlined-select-currency-native\"\r\n                    select\r\n                    label=\"Native select\"\r\n                    className={classes.textField}\r\n                    value={currency}\r\n                    onChange={handleChange}\r\n                    SelectProps={{\r\n                        native: true,\r\n                        MenuProps: {\r\n                            className: classes.menu,\r\n                        },\r\n                    }}\r\n                    helperText=\"Please select your currency\"\r\n                    margin=\"normal\"\r\n                    variant=\"outlined\"\r\n                >\r\n                    {currencies.map(option => (\r\n                        <option key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n                </TextField>\r\n            </div>\r\n        </form>\r\n    );\r\n}","import DenseAppBar from \"./../../components/Top/DenseAppBar\";\r\nimport 'typeface-roboto';\r\nimport React, { Component } from 'react';\r\nimport {connect, Provider} from 'react-redux'\r\nimport {setActiveSite, addActiveSite, isChoosen, addUser, setActiveUser} from \"../../actions/site\";\r\n//import { rootStore } from './store/index';\r\n\r\nimport PortalsList from \"./../../components/List/PortalsList\";\r\nimport BottomLinks from \"./../../components/Bottom/BottomLinks\";\r\nimport Grid from \"@material-ui/core/Grid\"\r\nimport Switch from \"@material-ui/core/Switch\"\r\nimport Sites from \"./Sites/SiteTabs/Sites\";\r\nimport RangeSlider from \"../../components/Filters/Range\";\r\nimport Selects from \"../../components/Filters/Selects\";\r\nimport {TextField} from \"@material-ui/core\";\r\n\r\n// Need jQuery? Install it with \"yarn add jquery\", then uncomment to require it.\r\n// const $ = require('jquery');\r\n\r\n\r\nclass Main extends Component {\r\n\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     console.log(prevProps, prevState, this.props)\r\n    //     if (prevProps.sites.length !== this.props.sites.length) {\r\n    //         this.setState({sites: this.props.sites})\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        console.log(this.props)\r\n\r\n        return (\r\n            <div>\r\n                <DenseAppBar withFilters={true} siteHandler={this.addSiteTo}/>\r\n                <Grid container>\r\n                    <Grid item xl={3} xs={3} md={3}>\r\n                        <Switch\r\n                            checked={true}\r\n                            // onChange={handleChange('checkedB')}\r\n                            value=\"checkedB\"\r\n                            color=\"primary\"\r\n                            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n                        />\r\n                        <RangeSlider/>\r\n                        <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" />\r\n                        <Selects />\r\n                    </Grid>\r\n                    <Grid item xl={9} xs={9} md={9}>\r\n                        <Sites />\r\n                    </Grid>\r\n                </Grid>\r\n                {/*<BottomLinks/>*/}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        users: store.sites.users,\r\n        sites: store.sites.addedSites,\r\n    };\r\n}\r\n\r\nexport default Main\r\n","import * as type from \"./../constants/SiteActionTypes\";\r\nexport const initialState = {\r\n    addedSites: [],\r\n    availableFilters: [],\r\n    currentSite: '',\r\n    chosen: false,\r\n    users: [],\r\n    activeUser: null,\r\n    activeTotal: 0,\r\n    accountsTotal: 0,\r\n};\r\n\r\nexport const siteReducer = (state = initialState, action) => {\r\n    console.log(action, state);\r\n    switch (action.type){\r\n\r\n        case type.TYPE_ADD_ACTIVE_SITE :\r\n            const sites = state.addedSites;\r\n            const users = state.users;\r\n            if(!sites.includes(action.payload)){\r\n                sites.push(action.payload);\r\n                users[action.payload.id] = [];\r\n            }\r\n            return {...state, addedSites: sites, users: users, activeTotal: sites.length};\r\n\r\n        case type.TYPE_SET_ACTIVE_SITE :\r\n            return {...state, currentSite:true};\r\n\r\n        case type.TYPE_SET_CHOSEN_TYPE :\r\n            return {...state, chosen: action.payload};\r\n\r\n        case type.TYPE_ADD_USER :\r\n            console.log(action);\r\n            let updatedUsers = state.users;\r\n            let filteredUsers = state.users.filter(function (elem) {\r\n                return elem.id === action.payload.user.id;\r\n            });\r\n            if (state.users[action.payload.siteId] && !filteredUsers.length)\r\n                updatedUsers[action.payload.siteId].push(action.payload.user);\r\n            return {\r\n                ...state,\r\n                users: updatedUsers,\r\n                accountsTotal: updatedUsers.length\r\n            };\r\n\r\n        case type.TYPE_SET_ACTIVE_USER :\r\n            return {...state, activeUser: action.payload};\r\n\r\n        default :\r\n            return state;\r\n    }\r\n\r\n};","import { combineReducers } from 'redux';\r\nimport {siteReducer} from './sites'\r\n\r\nexport const rootReducer = combineReducers({\r\n    sites: siteReducer,\r\n})","import { createStore, applyMiddleware, compose } from 'redux'\r\nimport { rootReducer, initialState } from '../reducers'\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const rootStore = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));","import 'typeface-roboto';\r\nimport React, { Component } from 'react';\r\nimport {connect, Provider} from 'react-redux'\r\n// import { rootStore } from './store/index';\r\n\r\n\r\nimport MainScreen from \"./containers/ListSitesScreen/MainScreen\";\r\nimport Main from \"./containers/Application/Main\";\r\nimport Button from \"@material-ui/core/Button\"\r\nimport {rootStore} from \"./store\";\r\nimport {addActiveSite, isChoosen, setActiveSite} from \"./actions/site\";\r\n\r\n\r\n// Need jQuery? Install it with \"yarn add jquery\", then uncomment to require it.\r\n// const $ = require('jquery');\r\n\r\n\r\nclass App extends Component {\r\n\r\n    addSite = (site) => {\r\n        console.log(site);\r\n        this.props.setChoosen(!this.props.showApp);\r\n    }\r\n\r\n    render() {\r\n        const main = (\r\n            <Main/>\r\n        );\r\n        const mainScreen = (<MainScreen />);\r\n        return (\r\n\r\n            <div>\r\n                <Button onClick={this.addSite}> Switch  </Button>\r\n                {this.props.showApp && main}\r\n                {!this.props.showApp && mainScreen}\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = store => {\r\n    return {\r\n        showApp: store.sites.chosen\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n        setChoosen: (e) => dispatch(isChoosen(e)),\r\n    }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from \"react-redux\";\r\nimport {rootStore} from \"./store\";\r\n\r\nReactDOM.render(<Provider store={rootStore}> <App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}